drag & drop // auto // chart

Tip : scheduler / web socket

<절차>

1. 요청 
	event -> js (jQuery) -> function(data) {데이터로 화면 DOM갱신}
	($ ==> jQuery 전체를 사용하는 함수)
	
	/* ==> 원칙상 기본으로 사용해야 함.
	$(document).ready(function(){
	});
	*/

	<script>
	$(function(){ ==> body는 페이지 로딩되면서 자동으로 실행
	$.ajax()});
	</script>

2. 응답
	controller (json/xml/text) <--> service(로직) <--> mapper <--> (ORM mybatis, hibernate) <--> DB
	⁜Restful server

////////////////////////////////////

DOM (Document Object Model)
-> XML이나 HTML 문서에 접근하기 위한 일종의 인터페이스

DOM TREE?
-> 문서를 node 구조로 tree 형태로 표시
하나의 root node에서 시작되며, tree에서는 위쪽의 node를 부모(parent)노드, 아래쪽 노드를 자식(child)이라고 함
children(자식)이 없는 node를 leaf node라고 함

<DOM 기본 인터페이스 >

Node   - 모든 객체의 부모 인터페이스로서 공통적으로 기능하는 함수를 가짐 
NodeList  -  노드들을 리스트로 받아서 처리하기 쉽도록 한것 (주로 getElementsbyTagName("태그네임") 메서드의 리턴 타입으로서 사용됨) 
Document - DOM 트리 구조의 최상위 노드 / XML 문서 자체에 해당 Element - XML의 엘리먼트에 해당하는 객체 유형 
Attr - XML의 Attribute에 해당하는 객체 유형 
CharacterData - XML의 데이터에 해당하는 객체 유형 
Text - 문자 데이터(내용)에 해당하는 객체 유형

<DOM Script >
DOM을 다루는 프로그래밍 기법 – Javascript를 의미  

<DOM 제어 속성 및 메소드>

<요소 찾기 >
getElementsByTagName 특정 태그를 가진 요소에 바로 접근 가능
getElementById 특정 아이디를 가진 요소에 바로 접근 가능
getElementsByClassName 특정 클래스를 가진 요소에 바로 접근 가능 

<요소 추가/삭제>
createElement 원하는 요소 생성 가능
appendChild 선택된 노드에 자식으로 요소 추가 가능
removeChild 특정 요소 삭제 가능
getAttribute 해당 요소의 속성값을 얻을 수 있다
setAttribute 원하는 노드의 속성 값 바꾸기 가능
